{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Camera as ExpoCamera } from 'expo-camera';\nimport * as Location from 'expo-location';\nimport { Ionicons } from '@expo/vector-icons';\nimport LoadingCamera from \"../loading/LoadingCamera\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Camera = function Camera(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(ExpoCamera.Constants.Type.back),\n      _useState2 = _slicedToArray(_useState, 2),\n      type = _useState2[0],\n      setType = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hasPermission = _useState4[0],\n      setHasPermission = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      camera = _useState6[0],\n      setCamera = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      location = _useState8[0],\n      setLocation = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      photoId = _useState10[0],\n      setPhotoId = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      photo = _useState12[0],\n      setPhoto = _useState12[1];\n\n  var _useState13 = useState('off'),\n      _useState14 = _slicedToArray(_useState13, 2),\n      flashMode = _useState14[0],\n      setFlashMode = _useState14[1];\n\n  var _useState15 = useState(0),\n      _useState16 = _slicedToArray(_useState15, 2),\n      imagePadding = _useState16[0],\n      setImagePadding = _useState16[1];\n\n  var _useState17 = useState('4:3'),\n      _useState18 = _slicedToArray(_useState17, 2),\n      ratio = _useState18[0],\n      setRatio = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      isRatioSet = _useState20[0],\n      setIsRatioSet = _useState20[1];\n\n  var screenRatio = height / width;\n\n  var _Dimensions$get = Dimensions.get('window'),\n      height = _Dimensions$get.height,\n      width = _Dimensions$get.width;\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ExpoCamera$req, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(ExpoCamera.requestCameraPermissionsAsync());\n\n            case 2:\n              _await$ExpoCamera$req = _context.sent;\n              status = _await$ExpoCamera$req.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  useEffect(function () {\n    (function _callee2() {\n      var _await$Location$reque, status, location;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context2.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== 'granted')) {\n                _context2.next = 7;\n                break;\n              }\n\n              setErrorMsg('Permission to access location was denied');\n              return _context2.abrupt(\"return\");\n\n            case 7:\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync());\n\n            case 9:\n              location = _context2.sent;\n              setLocation(location);\n              console.log(\"Variable location: \" + location);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var prepareRatio = function prepareRatio() {\n    var desiredRatio, ratios, distances, realRatios, minDistance, _iterator, _step, _ratio, parts, realRatio, distance, remainder;\n\n    return _regeneratorRuntime.async(function prepareRatio$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            desiredRatio = '4:3';\n\n            if (!(Platform.OS === 'android')) {\n              _context3.next = 14;\n              break;\n            }\n\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(camera.getSupportedRatiosAsync());\n\n          case 4:\n            ratios = _context3.sent;\n            distances = {};\n            realRatios = {};\n            minDistance = null;\n\n            for (_iterator = _createForOfIteratorHelperLoose(ratios); !(_step = _iterator()).done;) {\n              _ratio = _step.value;\n              parts = _ratio.split(':');\n              realRatio = parseInt(parts[0]) / parseInt(parts[1]);\n              realRatios[_ratio] = realRatio;\n              distance = screenRatio - realRatio;\n              distances[_ratio] = realRatio;\n\n              if (minDistance == null) {\n                minDistance = _ratio;\n              } else {\n                if (distance >= 0 && distance < distances[minDistance]) {\n                  minDistance = _ratio;\n                }\n              }\n            }\n\n            desiredRatio = minDistance;\n            remainder = Math.floor((height - realRatios[desiredRatio] * width) / 2);\n            setImagePadding(remainder);\n            setRatio(desiredRatio);\n            setIsRatioSet(true);\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var setCameraReady = function setCameraReady() {\n    return _regeneratorRuntime.async(function setCameraReady$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (isRatioSet) {\n              _context4.next = 3;\n              break;\n            }\n\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(prepareRatio());\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var capture = function capture() {\n    var _photo;\n\n    return _regeneratorRuntime.async(function capture$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (!(camera && hasPermission == true)) {\n              _context5.next = 6;\n              break;\n            }\n\n            _context5.next = 3;\n            return _regeneratorRuntime.awrap(camera.takePictureAsync());\n\n          case 3:\n            _photo = _context5.sent;\n            setPhoto(_photo.uri);\n            navigation.navigate(\"Upload\", {\n              location: location,\n              photo: _photo\n            });\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var flashSwitchHandler = function flashSwitchHandler() {\n    if (flashMode === 'off') {\n      setFlashMode('on');\n    }\n\n    if (flashMode === 'on') {\n      setFlashMode('off');\n    }\n  };\n\n  if (location == null) {\n    return _jsx(View, {\n      children: _jsx(LoadingCamera, {})\n    });\n  }\n\n  if (hasPermission === false) {\n    return _jsx(Text, {\n      children: \"No access to camera\"\n    });\n  }\n\n  return _jsx(ExpoCamera, {\n    type: type,\n    style: [styles.cameraScreen, {\n      marginTop: imagePadding,\n      marginBottom: imagePadding\n    }],\n    onCameraReady: setCameraReady,\n    ratio: ratio,\n    ref: function ref(_ref2) {\n      setCamera(_ref2);\n    },\n    autoFocus: \"on\",\n    flashMode: flashMode,\n    children: _jsxs(View, {\n      style: styles.bottomRow,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.flipButton,\n        onPress: function onPress() {\n          setType(type === ExpoCamera.Constants.Type.back ? ExpoCamera.Constants.Type.front : ExpoCamera.Constants.Type.back);\n        },\n        children: _jsx(Ionicons, {\n          color: \"white\",\n          name: \"camera-reverse-outline\",\n          size: SCREEN_HEIGHT * 0.08\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.cameraButton,\n        onPress: capture,\n        children: _jsx(Ionicons, {\n          color: \"white\",\n          name: \"radio-button-on-outline\",\n          size: SCREEN_HEIGHT * 0.08\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: flashSwitchHandler,\n        children: _jsx(Ionicons, {\n          name: flashMode !== 'off' ? 'flash' : 'flash-off',\n          size: 30,\n          color: \"white\",\n          style: styles.flashModeButton\n        })\n      })]\n    })\n  });\n};\n\nvar SCREEN_HEIGHT = Dimensions.get('window').height;\nvar SCREEN_WIDTH = Dimensions.get('window').width;\nvar styles = StyleSheet.create({\n  cameraScreen: {\n    height: SCREEN_HEIGHT,\n    width: SCREEN_WIDTH,\n    flex: 1\n  },\n  cameraButton: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    bottom: 5,\n    left: SCREEN_WIDTH * 0.35,\n    right: SCREEN_WIDTH * 0.35,\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1\n  },\n  bottomRow: {\n    backgroundColor: 'transparent',\n    marginBottom: 15,\n    flex: 1,\n    flexDirection: 'row',\n    position: 'relative'\n  },\n  flipButton: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    left: 10,\n    bottom: 5,\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\"\n  },\n  flashModeButton: {\n    position: 'absolute',\n    top: 20,\n    left: 10\n  }\n});\nexport default Camera;","map":{"version":3,"sources":["C:/Users/DCV/Documents/ReactNativeProjekt/EarthCrew/src/screens/menu/Camera.js"],"names":["React","useEffect","useState","useRef","Camera","ExpoCamera","Location","Ionicons","LoadingCamera","navigation","Constants","Type","back","type","setType","hasPermission","setHasPermission","camera","setCamera","location","setLocation","photoId","setPhotoId","photo","setPhoto","flashMode","setFlashMode","imagePadding","setImagePadding","ratio","setRatio","isRatioSet","setIsRatioSet","screenRatio","height","width","Dimensions","get","requestCameraPermissionsAsync","status","requestForegroundPermissionsAsync","setErrorMsg","getCurrentPositionAsync","console","log","prepareRatio","desiredRatio","Platform","OS","getSupportedRatiosAsync","ratios","distances","realRatios","minDistance","parts","split","realRatio","parseInt","distance","remainder","Math","floor","setCameraReady","capture","takePictureAsync","uri","navigate","flashSwitchHandler","styles","cameraScreen","marginTop","marginBottom","ref","bottomRow","flipButton","front","SCREEN_HEIGHT","cameraButton","flashModeButton","SCREEN_WIDTH","StyleSheet","create","flex","backgroundColor","position","bottom","left","right","justifyContent","alignItems","zIndex","flexDirection","top"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { TouchableOpacity, Dimensions, StyleSheet, Text, View, ImageBackground } from 'react-native';\r\nimport { Camera as ExpoCamera } from 'expo-camera';\r\nimport * as Location from 'expo-location';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport LoadingCamera from '../loading/LoadingCamera';\r\n\r\n\r\nconst Camera = ({ navigation }) => {\r\n    const [type, setType] = useState(ExpoCamera.Constants.Type.back);\r\n    const [hasPermission, setHasPermission] = useState(false);\r\n    const [camera, setCamera] = useState(null);\r\n    const [location, setLocation] = useState(null);\r\n    const [photoId, setPhotoId] = useState(null);\r\n    const [photo, setPhoto] = useState(null);\r\n    const [flashMode, setFlashMode] = useState('off');\r\n\r\n    // Screen Ratio and image padding\r\n    const [imagePadding, setImagePadding] = useState(0);\r\n    const [ratio, setRatio] = useState('4:3');  // default is 4:3\r\n    const [isRatioSet, setIsRatioSet] = useState(false);\r\n\r\n    const screenRatio = height / width;\r\n    const { height, width } = Dimensions.get('window');\r\n\r\n    // Loading camera\r\n    useEffect(() => {\r\n        (async () => {\r\n            const { status } = await ExpoCamera.requestCameraPermissionsAsync();\r\n            setHasPermission(status === 'granted');\r\n        })();\r\n    }, []);\r\n\r\n    // Load actual position of user\r\n    useEffect(() => {\r\n        (async () => {\r\n            const { status } = await Location.requestForegroundPermissionsAsync();\r\n            if (status !== 'granted') {\r\n                setErrorMsg('Permission to access location was denied');\r\n                return;\r\n            }\r\n            const location = await Location.getCurrentPositionAsync();\r\n            setLocation(location);\r\n\r\n            console.log(\"Variable location: \" + location)\r\n        })();\r\n    }, []);\r\n\r\n    // Set the camera ratio and padding.\r\n    // This code assumes a portrait mode screen\r\n    const prepareRatio = async () => {\r\n        let desiredRatio = '4:3';  // Start with the system default\r\n        // This issue only affects Android\r\n        if (Platform.OS === 'android') {\r\n            const ratios = await camera.getSupportedRatiosAsync();\r\n\r\n            // Calculate the width/height of each of the supported camera ratios\r\n            // These width/height are measured in landscape mode\r\n            // Find the ratio that is closest to the screen ratio without going over\r\n            let distances = {};\r\n            let realRatios = {};\r\n            let minDistance = null;\r\n            for (const ratio of ratios) {\r\n                const parts = ratio.split(':');\r\n                const realRatio = parseInt(parts[0]) / parseInt(parts[1]);\r\n                realRatios[ratio] = realRatio;\r\n                // Ratio can't be taller than screen, so we don't want an abs()\r\n                const distance = screenRatio - realRatio;\r\n                distances[ratio] = realRatio;\r\n                if (minDistance == null) {\r\n                    minDistance = ratio;\r\n                } else {\r\n                    if (distance >= 0 && distance < distances[minDistance]) {\r\n                        minDistance = ratio;\r\n                    }\r\n                }\r\n            }\r\n            // Set the best match\r\n            desiredRatio = minDistance;\r\n            // Calculate the difference between the camera width and the screen height\r\n            const remainder = Math.floor(\r\n                (height - realRatios[desiredRatio] * width) / 2\r\n            );\r\n            // Set the preview padding and preview ratio\r\n            setImagePadding(remainder);\r\n            setRatio(desiredRatio);\r\n            // Set a flag so we don't do this \r\n            // Calculation each time the screen refreshes\r\n            setIsRatioSet(true);\r\n        }\r\n    };\r\n\r\n    // The camera must be loaded in order to access the supported ratios\r\n    const setCameraReady = async () => {\r\n        if (!isRatioSet) {\r\n            await prepareRatio();\r\n        }\r\n    };\r\n\r\n    // Taking a picture\r\n    const capture = async () => {\r\n        if (camera && hasPermission == true) {\r\n            const photo = await camera.takePictureAsync();\r\n            setPhoto(photo.uri)\r\n\r\n            navigation.navigate(\"Upload\", { location: location, photo: photo });\r\n        }\r\n    }\r\n\r\n    // Checking the flashMode\r\n    const flashSwitchHandler = () => {\r\n        if (flashMode === 'off') {\r\n            setFlashMode('on')\r\n        }\r\n        if (flashMode === 'on') {\r\n            setFlashMode('off')\r\n        }\r\n    }\r\n\r\n    // Show the loading screen until location is loaded\r\n    if (location == null) {\r\n        return (\r\n            <View>\r\n                <LoadingCamera />\r\n            </View>)\r\n    }\r\n\r\n    // When the permission is not given\r\n    if (hasPermission === false) {\r\n        return <Text>No access to camera</Text>;\r\n    }\r\n\r\n    return (\r\n        <ExpoCamera\r\n            type={type}\r\n            style={[styles.cameraScreen, { marginTop: imagePadding, marginBottom: imagePadding }]}\r\n            onCameraReady={setCameraReady}\r\n            ratio={ratio}\r\n            ref={(ref) => {\r\n                setCamera(ref);\r\n            }}\r\n            autoFocus='on'\r\n            flashMode={flashMode}\r\n        >\r\n            <View style={styles.bottomRow}>\r\n                <TouchableOpacity\r\n                    style={styles.flipButton}\r\n                    onPress={() => {\r\n                        setType(\r\n                            type === ExpoCamera.Constants.Type.back\r\n                                ? ExpoCamera.Constants.Type.front\r\n                                : ExpoCamera.Constants.Type.back\r\n                        );\r\n                    }}>\r\n                    <Ionicons\r\n                        color=\"white\"\r\n                        name=\"camera-reverse-outline\"\r\n                        size={SCREEN_HEIGHT * 0.08}\r\n                    />\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                    style={styles.cameraButton}\r\n                    onPress={\r\n                        capture\r\n                    }>\r\n                    <Ionicons\r\n                        color=\"white\"\r\n                        name=\"radio-button-on-outline\"\r\n                        size={SCREEN_HEIGHT * 0.08}\r\n                    />\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                    onPress={flashSwitchHandler}\r\n                >\r\n                    <Ionicons\r\n                        name={\r\n                            flashMode !== 'off'\r\n                                ? 'flash'\r\n                                : 'flash-off'\r\n                        }\r\n                        size={30}\r\n                        color=\"white\"\r\n                        style={styles.flashModeButton}\r\n                    />\r\n                </TouchableOpacity>\r\n            </View>\r\n        </ExpoCamera >\r\n    )\r\n}\r\n\r\nconst SCREEN_HEIGHT = Dimensions.get('window').height;\r\nconst SCREEN_WIDTH = Dimensions.get('window').width;\r\n\r\nconst styles = StyleSheet.create({\r\n    cameraScreen: {\r\n        height: SCREEN_HEIGHT,\r\n        width: SCREEN_WIDTH,\r\n        flex: 1\r\n    },\r\n    cameraButton: {\r\n        backgroundColor: 'transparent',\r\n        position: 'absolute',\r\n        bottom: 5,\r\n        left: SCREEN_WIDTH * 0.35,\r\n        right: SCREEN_WIDTH * 0.35,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        zIndex: 1\r\n    },\r\n    bottomRow: {\r\n        backgroundColor: 'transparent',\r\n        marginBottom: 15,\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        position: 'relative'\r\n    },\r\n    flipButton: {\r\n        backgroundColor: 'transparent',\r\n        position: 'absolute',\r\n        left: 10,\r\n        bottom: 5,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"flex-end\",\r\n    },\r\n    flashModeButton: {\r\n        position: 'absolute',\r\n        top: 20,\r\n        left: 10\r\n    }\r\n});\r\n\r\nexport default Camera;"]},"metadata":{},"sourceType":"module"}