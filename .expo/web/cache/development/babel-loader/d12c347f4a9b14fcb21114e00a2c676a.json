{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar DataScreen = function (_Component) {\n  _inherits(DataScreen, _Component);\n\n  var _super = _createSuper(DataScreen);\n\n  function DataScreen() {\n    var _this;\n\n    _classCallCheck(this, DataScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      litters: []\n    };\n    return _this;\n  }\n\n  _createClass(DataScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var loadLitters = function loadLitters() {\n        var response, json;\n        return _regeneratorRuntime.async(function loadLitters$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(fetch(\"http://178.18.252.126:1337/litters\"));\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return _regeneratorRuntime.awrap(response.json());\n\n              case 5:\n                json = _context.sent;\n                console.log(json);\n\n                _this2.setState({\n                  litters: json\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n\n      loadLitters();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, {\n        style: styles.container,\n        children: _jsx(Text, {\n          children: \"Data\"\n        })\n      });\n    }\n  }]);\n\n  return DataScreen;\n}(Component);\n\nexport { DataScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    marginBottom: 10,\n    backgroundColor: '#7dff77'\n  }\n});","map":{"version":3,"sources":["C:/Users/DCV/Documents/ReactNativeProjekt/EarthCrew/js/screens/DataScreen.js"],"names":["React","Component","DataScreen","state","litters","loadLitters","fetch","response","json","console","log","setState","styles","container","StyleSheet","create","flex","flexDirection","justifyContent","alignItems","marginBottom","backgroundColor"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;IAGqBC,U;;;;;;;;;;;;;;;UACjBC,K,GAAQ;AAAEC,MAAAA,OAAO,EAAE;AAAX,K;;;;;;WAER,6BAAoB;AAAA;;AAChB,UAAIC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDACOC,KAAK,CAAC,oCAAD,CADZ;;AAAA;AACVC,gBAAAA,QADU;AAAA;AAAA,iDAEGA,QAAQ,CAACC,IAAT,EAFH;;AAAA;AAEVA,gBAAAA,IAFU;AAGdC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,gBAAA,MAAI,CAACG,QAAL,CAAc;AAAEP,kBAAAA,OAAO,EAAEI;AAAX,iBAAd;;AAJc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAlB;;AAMAH,MAAAA,WAAW;AACd;;;WACD,kBAAS;AACL,aACI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEO,MAAM,CAACC,SAApB;AAAA,kBACI,KAAC,IAAD;AAAA;AAAA;AADJ,QADJ;AAKH;;;;EAlBmCZ,S;;SAAnBC,U;AA0BrB,IAAMU,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACPG,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,aAAa,EAAE,KAFR;AAGPC,IAAAA,cAAc,EAAE,cAHT;AAIPC,IAAAA,UAAU,EAAE,QAJL;AAKPC,IAAAA,YAAY,EAAE,EALP;AAMPC,IAAAA,eAAe,EAAE;AANV;AADkB,CAAlB,CAAf","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\n\r\nexport default class DataScreen extends Component {\r\n    state = { litters: [] }\r\n\r\n    componentDidMount() {\r\n        let loadLitters = async () => {\r\n            let response = await fetch(\"http://178.18.252.126:1337/litters\");\r\n            let json = await response.json();\r\n            console.log(json);\r\n            this.setState({ litters: json });\r\n        }\r\n        loadLitters();\r\n    }\r\n    render() {\r\n        return (\r\n            <View style={styles.container} >\r\n                <Text>Data</Text>\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-evenly',\r\n        alignItems: 'center',\r\n        marginBottom: 10,\r\n        backgroundColor: '#7dff77'\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}