{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Camera as ExpoCamera } from 'expo-camera';\nimport * as Location from 'expo-location';\nimport axios from 'axios';\nimport { Icon } from 'react-native-elements';\nimport { Ionicons } from '@expo/vector-icons';\nimport LoadingCamera from \"../loading/LoadingCamera\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Camera = function Camera(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(ExpoCamera.Constants.Type.back),\n      _useState2 = _slicedToArray(_useState, 2),\n      type = _useState2[0],\n      setType = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hasPermission = _useState4[0],\n      setHasPermission = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      location = _useState6[0],\n      setLocation = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      photoId = _useState8[0],\n      setPhotoId = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      photo = _useState10[0],\n      setPhoto = _useState10[1];\n\n  var _useState11 = useState('off'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      flashMode = _useState12[0],\n      setFlashMode = _useState12[1];\n\n  var ref = React.useRef();\n  useEffect(function () {\n    (function _callee() {\n      var _await$ExpoCamera$req, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(ExpoCamera.requestCameraPermissionsAsync());\n\n            case 2:\n              _await$ExpoCamera$req = _context.sent;\n              status = _await$ExpoCamera$req.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  useEffect(function () {\n    (function _callee2() {\n      var _await$Location$reque, status, location;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context2.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== 'granted')) {\n                _context2.next = 7;\n                break;\n              }\n\n              setErrorMsg('Permission to access location was denied');\n              return _context2.abrupt(\"return\");\n\n            case 7:\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 9:\n              location = _context2.sent;\n              setLocation(location);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  useEffect(function () {\n    (function _callee3() {\n      var _photo, data, requestConfig, response, responseJson;\n\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(ref && hasPermission == true)) {\n                _context3.next = 16;\n                break;\n              }\n\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(ref.current.takePictureAsync());\n\n            case 3:\n              _photo = _context3.sent;\n              setPhoto(_photo.uri);\n\n              if (_photo) {\n                navi;\n              }\n\n              data = new FormData();\n              data.append('files', {\n                uri: _photo.uri,\n                name: \"test.jpg\",\n                type: 'multipart/form-data'\n              });\n              requestConfig = {\n                method: 'POST',\n                body: data\n              };\n              _context3.next = 11;\n              return _regeneratorRuntime.awrap(fetch(\"http://178.18.252.126:1337/upload\", requestConfig));\n\n            case 11:\n              response = _context3.sent;\n              _context3.next = 14;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 14:\n              responseJson = _context3.sent;\n              setPhotoId(responseJson);\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var reportLitter = function reportLitter() {\n    var coords = location.coords;\n    console.log({\n      coordinates: coords.latitude + \",\" + coords.longitude,\n      type: \"Litter\",\n      pictureOfLitter: JSON.stringify(\"photoId:\" + photoId)\n    });\n    axios.post(\"http://178.18.252.126:1337/litters\", {\n      coordinates: coords.latitude + \",\" + coords.longitude,\n      type: \"Litter\",\n      pictureOfLitter: photoId\n    });\n  };\n\n  var flashSwitchHandler = function flashSwitchHandler() {\n    if (flashMode === 'off') {\n      setFlashMode('on');\n    }\n\n    if (flashMode === 'on') {\n      setFlashMode('off');\n    }\n  };\n\n  if (location == null) {\n    return _jsx(View, {\n      children: _jsx(LoadingCamera, {})\n    });\n  }\n\n  if (hasPermission === false) {\n    return _jsx(Text, {\n      children: \"No access to camera\"\n    });\n  }\n\n  return _jsx(ExpoCamera, {\n    type: type,\n    ref: ref,\n    style: styles.cameraScreen,\n    autoFocus: \"on\",\n    flashMode: flashMode,\n    children: _jsxs(View, {\n      style: styles.bottomRow,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.flipButton,\n        onPress: function onPress() {\n          setType(type === ExpoCamera.Constants.Type.back ? ExpoCamera.Constants.Type.front : ExpoCamera.Constants.Type.back);\n        },\n        children: _jsx(Icon, {\n          color: \"white\",\n          name: \"flip\",\n          size: SCREEN_HEIGHT * 0.08\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.cameraButton,\n        onPress: function onPress() {\n          capture();\n        },\n        children: _jsx(Icon, {\n          color: \"white\",\n          name: \"adjust\",\n          size: SCREEN_HEIGHT * 0.08\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.sendButton,\n        onPress: function onPress() {\n          reportLitter();\n        },\n        children: _jsx(Ionicons, {\n          color: \"white\",\n          name: \"send-outline\",\n          size: SCREEN_HEIGHT * 0.08\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: flashSwitchHandler,\n        children: _jsx(Ionicons, {\n          name: flashMode !== 'off' ? 'flash' : 'flash-off',\n          size: 30,\n          color: \"white\",\n          style: styles.flashModeButton\n        })\n      })]\n    })\n  });\n};\n\nvar SCREEN_HEIGHT = Dimensions.get('window').height;\nvar SCREEN_WIDTH = Dimensions.get('window').width;\nvar styles = StyleSheet.create({\n  cameraScreen: {\n    height: SCREEN_HEIGHT,\n    width: SCREEN_WIDTH,\n    flex: 1\n  },\n  cameraButton: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    bottom: 0,\n    left: SCREEN_WIDTH * 0.35,\n    right: SCREEN_WIDTH * 0.35,\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1\n  },\n  bottomRow: {\n    backgroundColor: 'transparent',\n    marginBottom: 15,\n    flex: 1,\n    flexDirection: 'row',\n    position: 'relative'\n  },\n  flipButton: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    bottom: 0,\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\"\n  },\n  sendButton: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    bottom: 0,\n    right: 0\n  },\n  flashModeButton: {\n    position: 'absolute',\n    top: 15,\n    left: 5\n  }\n});\nexport default Camera;","map":{"version":3,"sources":["C:/Users/DCV/Documents/ReactNativeProjekt/EarthCrew/src/screens/menu/Camera.js"],"names":["React","useEffect","useState","Camera","ExpoCamera","Location","axios","Icon","Ionicons","LoadingCamera","navigation","Constants","Type","back","type","setType","hasPermission","setHasPermission","location","setLocation","photoId","setPhotoId","photo","setPhoto","flashMode","setFlashMode","ref","useRef","requestCameraPermissionsAsync","status","requestForegroundPermissionsAsync","setErrorMsg","getCurrentPositionAsync","current","takePictureAsync","uri","navi","data","FormData","append","name","requestConfig","method","body","fetch","response","json","responseJson","reportLitter","coords","console","log","coordinates","latitude","longitude","pictureOfLitter","JSON","stringify","post","flashSwitchHandler","styles","cameraScreen","bottomRow","flipButton","front","SCREEN_HEIGHT","cameraButton","capture","sendButton","flashModeButton","Dimensions","get","height","SCREEN_WIDTH","width","StyleSheet","create","flex","backgroundColor","position","bottom","left","right","justifyContent","alignItems","zIndex","marginBottom","flexDirection","top"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, TouchableOpacity, Dimensions, StyleSheet, Text, View, ImageBackground } from 'react-native';\r\nimport { Camera as ExpoCamera } from 'expo-camera';\r\nimport * as Location from 'expo-location';\r\nimport axios from 'axios';\r\nimport { Icon } from 'react-native-elements';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport LoadingCamera from '../loading/LoadingCamera';\r\n\r\nconst Camera = ({ navigation }) => {\r\n    const [type, setType] = useState(ExpoCamera.Constants.Type.back);\r\n    const [hasPermission, setHasPermission] = useState(false);\r\n    const [location, setLocation] = useState(null);\r\n    const [photoId, setPhotoId] = useState(null)\r\n    const [photo, setPhoto] = useState(null);\r\n    const [flashMode, setFlashMode] = useState('off')\r\n    const ref = React.useRef();\r\n\r\n    // Loading camera\r\n    useEffect(() => {\r\n        (async () => {\r\n            const { status } = await ExpoCamera.requestCameraPermissionsAsync();\r\n            setHasPermission(status === 'granted');\r\n        })();\r\n    }, []);\r\n\r\n    // Load actual position of user\r\n    useEffect(() => {\r\n        (async () => {\r\n            let { status } = await Location.requestForegroundPermissionsAsync();\r\n            if (status !== 'granted') {\r\n                setErrorMsg('Permission to access location was denied');\r\n                return;\r\n            }\r\n            let location = await Location.getCurrentPositionAsync({});\r\n            setLocation(location);\r\n        })();\r\n    }, []);\r\n\r\n    // Taking a picture\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (ref && hasPermission == true) {\r\n                const photo = await ref.current.takePictureAsync();\r\n                setPhoto(photo.uri)\r\n                if (photo) {\r\n                    navi\r\n                }\r\n                //Multipart request\r\n                const data = new FormData();\r\n\r\n                data.append('files', {\r\n                    uri: photo.uri,\r\n                    name: \"test.jpg\",\r\n                    type: 'multipart/form-data'\r\n                });\r\n\r\n                const requestConfig = {\r\n                    method: 'POST',\r\n                    body: data,\r\n                };\r\n\r\n                const response = await fetch(\"http://178.18.252.126:1337/upload\", requestConfig);\r\n\r\n                let responseJson = await response.json();\r\n                setPhotoId(responseJson)\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    // Report litter\r\n    const reportLitter = () => {\r\n        const coords = location.coords;\r\n\r\n        console.log({\r\n            coordinates: coords.latitude + \",\" + coords.longitude,\r\n            type: \"Litter\",\r\n            pictureOfLitter: JSON.stringify(\"photoId:\" + photoId)\r\n        })\r\n\r\n        axios.post(\"http://178.18.252.126:1337/litters\", {\r\n            coordinates: coords.latitude + \",\" + coords.longitude,\r\n            type: \"Litter\",\r\n            pictureOfLitter: photoId\r\n        })\r\n    }\r\n\r\n    // Checking the flashMode\r\n    const flashSwitchHandler = () => {\r\n        if (flashMode === 'off') {\r\n            setFlashMode('on')\r\n        }\r\n        if (flashMode === 'on') {\r\n            setFlashMode('off')\r\n        }\r\n    }\r\n\r\n\r\n    // Show the loading screen until location is loaded\r\n    if (location == null) {\r\n        return (\r\n            <View>\r\n                <LoadingCamera />\r\n            </View>)\r\n    }\r\n\r\n    // When the permission is not given\r\n    if (hasPermission === false) {\r\n        return <Text>No access to camera</Text>;\r\n    }\r\n\r\n    return (\r\n        <ExpoCamera\r\n            type={type}\r\n            ref={ref}\r\n            style={styles.cameraScreen}\r\n            autoFocus='on'\r\n            flashMode={flashMode}\r\n        >\r\n            <View style={styles.bottomRow}>\r\n                <TouchableOpacity\r\n                    style={styles.flipButton}\r\n                    onPress={() => {\r\n                        setType(\r\n                            type === ExpoCamera.Constants.Type.back\r\n                                ? ExpoCamera.Constants.Type.front\r\n                                : ExpoCamera.Constants.Type.back\r\n                        );\r\n                    }}>\r\n                    <Icon\r\n                        color=\"white\"\r\n                        name=\"flip\"\r\n                        size={SCREEN_HEIGHT * 0.08}\r\n                    />\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                    style={styles.cameraButton}\r\n                    onPress={() => {\r\n                        capture()\r\n                    }}>\r\n                    <Icon\r\n                        color=\"white\"\r\n                        name=\"adjust\"\r\n                        size={SCREEN_HEIGHT * 0.08}\r\n                    />\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                    style={styles.sendButton}\r\n                    onPress={() => {\r\n                        reportLitter()\r\n                    }}>\r\n                    <Ionicons\r\n                        color=\"white\"\r\n                        name=\"send-outline\"\r\n                        size={SCREEN_HEIGHT * 0.08}\r\n                    />\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity\r\n                    onPress={flashSwitchHandler}\r\n                >\r\n                    <Ionicons\r\n                        name={\r\n                            flashMode !== 'off'\r\n                                ? 'flash'\r\n                                : 'flash-off'\r\n                        }\r\n                        size={30}\r\n                        color=\"white\"\r\n                        style={styles.flashModeButton}\r\n                    />\r\n                </TouchableOpacity>\r\n            </View>\r\n        </ExpoCamera >\r\n    )\r\n}\r\n\r\nconst SCREEN_HEIGHT = Dimensions.get('window').height;\r\nconst SCREEN_WIDTH = Dimensions.get('window').width;\r\n\r\nconst styles = StyleSheet.create({\r\n    cameraScreen: {\r\n        height: SCREEN_HEIGHT,\r\n        width: SCREEN_WIDTH,\r\n        flex: 1\r\n    },\r\n    cameraButton: {\r\n        backgroundColor: 'transparent',\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        left: SCREEN_WIDTH * 0.35,\r\n        right: SCREEN_WIDTH * 0.35,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        zIndex: 1\r\n    },\r\n    bottomRow: {\r\n        backgroundColor: 'transparent',\r\n        marginBottom: 15,\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        position: 'relative'\r\n    },\r\n    flipButton: {\r\n        backgroundColor: 'transparent',\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"flex-end\",\r\n    },\r\n    sendButton: {\r\n        backgroundColor: 'transparent',\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        right: 0,\r\n\r\n    },\r\n    flashModeButton: {\r\n        position: 'absolute',\r\n        top: 15,\r\n        left: 5\r\n    }\r\n});\r\n\r\nexport default Camera;"]},"metadata":{},"sourceType":"module"}