{"ast":null,"code":"\"use strict\";\n\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport MapView, { Callout, Marker } from 'react-native-maps';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Map = function Map() {\n  var _React$useState = React.useState({\n    latitude: 37.78825,\n    longitude: -122.4324\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      pin = _React$useState2[0],\n      setPin = _React$useState2[1];\n\n  return _jsxs(View, {\n    style: styles.map2,\n    children: [_jsx(GooglePlacesAutocomplete, {\n      placeholder: \"Search\",\n      fetchDetails: true,\n      GooglePlacesSearchQuery: {\n        rankby: \"distance\"\n      },\n      onPress: function onPress(data) {\n        var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        console.log(data, details);\n      },\n      query: {\n        key: 'AIzaSyAK9Zksgh9T5vQwL-vdarMtP-mAd9Cqz2U',\n        language: 'en',\n        type: 'establishment'\n      },\n      styles: {\n        container: {\n          flex: 0,\n          position: 'absolute',\n          width: '100%',\n          zIndex: 1\n        },\n        listView: {\n          backgroundColor: \"white\"\n        }\n      }\n    }), _jsx(MapView, {\n      style: styles.map,\n      showsUserLocation: true,\n      userLocationFastestInterval: 5000,\n      initialRegion: {\n        latitude: 37.78825,\n        longitude: -122.4324,\n        latitudeDelta: 0.0922,\n        longitudeDelta: 0.0421\n      },\n      provider: \"google\",\n      children: _jsx(Marker, {\n        coordinate: pin,\n        draggable: true,\n        onDragStart: function onDragStart(event) {\n          console.log(\"Drag start\", event.nativeEvent.coordinate);\n        },\n        onDragEnd: function onDragEnd(event) {\n          setPin({\n            latitude: event.nativeEvent.coordinate.latitude,\n            longitude: event.nativeEvent.coordinate.longitude\n          });\n        },\n        children: _jsx(Callout, {\n          children: _jsx(Text, {\n            children: \" You are here\"\n          })\n        })\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  map: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height\n  },\n  map2: {\n    flex: 1,\n    marginTop: 0\n  }\n});\nexport default Map;","map":{"version":3,"sources":["C:/Users/DCV/Documents/ReactNativeProjekt/EarthCrew/src/screens/menu/Map.js"],"names":["MapView","Callout","Marker","GooglePlacesAutocomplete","Map","React","useState","latitude","longitude","pin","setPin","styles","map2","rankby","data","details","console","log","key","language","type","container","flex","position","width","zIndex","listView","backgroundColor","map","latitudeDelta","longitudeDelta","event","nativeEvent","coordinate","StyleSheet","create","alignItems","justifyContent","Dimensions","get","height","marginTop"],"mappings":"AAAA;;;AAEA,OAAOA,OAAP,IAAkBC,OAAlB,EAA2BC,MAA3B,QAAyC,mBAAzC;;;;;AAEA,SAASC,wBAAT,QAAyC,yCAAzC;;;;AAGA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AACd,wBAAsBC,KAAK,CAACC,QAAN,CAAe;AACjCC,IAAAA,QAAQ,EAAE,QADuB;AAEjCC,IAAAA,SAAS,EAAE,CAAC;AAFqB,GAAf,CAAtB;AAAA;AAAA,MAAOC,GAAP;AAAA,MAAYC,MAAZ;;AAIA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA,eACI,KAAC,wBAAD;AACI,MAAA,WAAW,EAAC,QADhB;AAEI,MAAA,YAAY,EAAE,IAFlB;AAGI,MAAA,uBAAuB,EAAE;AACrBC,QAAAA,MAAM,EAAE;AADa,OAH7B;AAMI,MAAA,OAAO,EAAE,iBAACC,IAAD,EAA0B;AAAA,YAAnBC,OAAmB,uEAAT,IAAS;AAE/BC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBC,OAAlB;AACH,OATL;AAUI,MAAA,KAAK,EAAE;AACHG,QAAAA,GAAG,EAAE,yCADF;AAEHC,QAAAA,QAAQ,EAAE,IAFP;AAGHC,QAAAA,IAAI,EAAE;AAHH,OAVX;AAeI,MAAA,MAAM,EAAE;AACJC,QAAAA,SAAS,EAAE;AACPC,UAAAA,IAAI,EAAE,CADC;AAEPC,UAAAA,QAAQ,EAAE,UAFH;AAGPC,UAAAA,KAAK,EAAE,MAHA;AAIPC,UAAAA,MAAM,EAAE;AAJD,SADP;AAOJC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,eAAe,EAAE;AAAnB;AAPN;AAfZ,MADJ,EA0BI,KAAC,OAAD;AACI,MAAA,KAAK,EAAEhB,MAAM,CAACiB,GADlB;AAEI,MAAA,iBAAiB,MAFrB;AAGI,MAAA,2BAA2B,EAAE,IAHjC;AAII,MAAA,aAAa,EAAE;AACXrB,QAAAA,QAAQ,EAAE,QADC;AAEXC,QAAAA,SAAS,EAAE,CAAC,QAFD;AAGXqB,QAAAA,aAAa,EAAE,MAHJ;AAIXC,QAAAA,cAAc,EAAE;AAJL,OAJnB;AAUI,MAAA,QAAQ,EAAC,QAVb;AAAA,gBAWI,KAAC,MAAD;AACI,QAAA,UAAU,EAAErB,GADhB;AAEI,QAAA,SAAS,EAAE,IAFf;AAGI,QAAA,WAAW,EAAE,qBAACsB,KAAD,EAAW;AACpBf,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Bc,KAAK,CAACC,WAAN,CAAkBC,UAA5C;AACH,SALL;AAMI,QAAA,SAAS,EAAE,mBAACF,KAAD,EAAW;AAClBrB,UAAAA,MAAM,CAAC;AACHH,YAAAA,QAAQ,EAAEwB,KAAK,CAACC,WAAN,CAAkBC,UAAlB,CAA6B1B,QADpC;AAEHC,YAAAA,SAAS,EAAEuB,KAAK,CAACC,WAAN,CAAkBC,UAAlB,CAA6BzB;AAFrC,WAAD,CAAN;AAIH,SAXL;AAAA,kBAYI,KAAC,OAAD;AAAA,oBACI,KAAC,IAAD;AAAA;AAAA;AADJ;AAZJ;AAXJ,MA1BJ;AAAA,IADJ;AA0DH,CA/DD;;AAgEA,IAAMG,MAAM,GAAGuB,UAAU,CAACC,MAAX,CAAkB;AAC7Bd,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAE,CADC;AAEPK,IAAAA,eAAe,EAAE,MAFV;AAGPS,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT,GADkB;AAO7BT,EAAAA,GAAG,EAAE;AACDJ,IAAAA,KAAK,EAAEc,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBf,KAD/B;AAEDgB,IAAAA,MAAM,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC;AAFhC,GAPwB;AAW7B5B,EAAAA,IAAI,EAAE;AACFU,IAAAA,IAAI,EAAE,CADJ;AAEFmB,IAAAA,SAAS,EAAE;AAFT;AAXuB,CAAlB,CAAf;AAiBA,eAAerC,GAAf","sourcesContent":["\"use strict\"\r\n\r\nimport MapView, { Callout, Marker } from 'react-native-maps';\r\nimport { StyleSheet, Text, View, Dimensions } from 'react-native';\r\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\r\n\r\n\r\nconst Map = () => {\r\n    const [pin, setPin] = React.useState({\r\n        latitude: 37.78825,\r\n        longitude: -122.4324\r\n    })\r\n    return (\r\n        <View style={styles.map2} >\r\n            <GooglePlacesAutocomplete\r\n                placeholder='Search'\r\n                fetchDetails={true}\r\n                GooglePlacesSearchQuery={{\r\n                    rankby: \"distance\"\r\n                }}\r\n                onPress={(data, details = null) => {\r\n                    // 'details' is provided when fetchDetails = true\r\n                    console.log(data, details);\r\n                }}\r\n                query={{\r\n                    key: 'AIzaSyAK9Zksgh9T5vQwL-vdarMtP-mAd9Cqz2U',\r\n                    language: 'en',\r\n                    type: 'establishment'\r\n                }}\r\n                styles={{\r\n                    container: {\r\n                        flex: 0,\r\n                        position: 'absolute',\r\n                        width: '100%',\r\n                        zIndex: 1,\r\n                    },\r\n                    listView: { backgroundColor: \"white\" }\r\n                }}\r\n            />\r\n            <MapView\r\n                style={styles.map}\r\n                showsUserLocation\r\n                userLocationFastestInterval={5000}\r\n                initialRegion={{\r\n                    latitude: 37.78825,\r\n                    longitude: -122.4324,\r\n                    latitudeDelta: 0.0922,\r\n                    longitudeDelta: 0.0421,\r\n                }}\r\n                provider='google'>\r\n                <Marker\r\n                    coordinate={pin}\r\n                    draggable={true}\r\n                    onDragStart={(event) => {\r\n                        console.log(\"Drag start\", event.nativeEvent.coordinate)\r\n                    }}\r\n                    onDragEnd={(event) => {\r\n                        setPin({\r\n                            latitude: event.nativeEvent.coordinate.latitude,\r\n                            longitude: event.nativeEvent.coordinate.longitude\r\n                        })\r\n                    }}>\r\n                    <Callout>\r\n                        <Text> You are here</Text>\r\n                    </Callout>\r\n                </Marker>\r\n            </MapView>\r\n        </View >\r\n    );\r\n\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    map: {\r\n        width: Dimensions.get('window').width,\r\n        height: Dimensions.get('window').height,\r\n    },\r\n    map2: {\r\n        flex: 1,\r\n        marginTop: 0\r\n    }\r\n});\r\n\r\nexport default Map;"]},"metadata":{},"sourceType":"module"}