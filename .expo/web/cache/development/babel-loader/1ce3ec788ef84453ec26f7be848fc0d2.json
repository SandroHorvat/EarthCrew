{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CustomInput from \"../../components/CustomInput\";\nimport CustomButton from \"../../components/CustomButton\";\nimport { useNavigation } from '@react-navigation/core';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ConfirmEmailScreen = function ConfirmEmailScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      code = _useState2[0],\n      setCode = _useState2[1];\n\n  var navigation = useNavigation();\n\n  var onConfirmPressed = function onConfirmPressed() {\n    navigation.navigate('Home');\n  };\n\n  var onSignInPress = function onSignInPress() {\n    navigation.navigate('SignIn');\n  };\n\n  var onResendPress = function onResendPress() {\n    console.warn('onResendPress');\n  };\n\n  return _jsx(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    children: _jsxs(View, {\n      style: styles.root,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Confirm your email\"\n      }), _jsx(CustomInput, {\n        placeholder: \"Enter your confirmation code\",\n        value: code,\n        setValue: setCode\n      }), _jsx(CustomButton, {\n        text: \"Confirm\",\n        onPress: onConfirmPressed\n      }), _jsx(CustomButton, {\n        text: \"Resend code\",\n        onPress: onResendPress,\n        type: \"SECONDARY\"\n      }), _jsx(CustomButton, {\n        text: \"Back to Sign in\",\n        onPress: onSignInPress,\n        type: \"TERTIARY\"\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#051C60',\n    margin: 10\n  },\n  text: {\n    color: 'gray',\n    marginVertical: 10\n  },\n  link: {\n    color: '#FDB075'\n  }\n});\nexport default ConfirmEmailScreen;","map":{"version":3,"sources":["C:/Users/DCV/Documents/ReactNativeProjekt/EarthCrew/src/screens/ConfirmEmailScreen/ConfirmEmailScreen.js"],"names":["React","useState","CustomInput","CustomButton","useNavigation","ConfirmEmailScreen","code","setCode","navigation","onConfirmPressed","navigate","onSignInPress","onResendPress","console","warn","styles","root","title","StyleSheet","create","alignItems","padding","fontSize","fontWeight","color","margin","text","marginVertical","link"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;AAEA,OAAOC,WAAP;AACA,OAAOC,YAAP;AACA,SAAQC,aAAR,QAA4B,wBAA5B;;;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,kBAAwBJ,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOK,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAMC,UAAU,GAAGJ,aAAa,EAAhC;;AAEA,MAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BD,IAAAA,UAAU,CAACE,QAAX,CAAoB,MAApB;AACD,GAFD;;AAGA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BH,IAAAA,UAAU,CAACE,QAAX,CAAoB,QAApB;AACD,GAFD;;AAGA,MAAME,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BC,IAAAA,OAAO,CAACC,IAAR,CAAa,eAAb;AACD,GAFD;;AAIA,SACE,KAAC,UAAD;AAAY,IAAA,4BAA4B,EAAE,KAA1C;AAAA,cACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA,iBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA,QADF,EAGE,KAAC,WAAD;AACE,QAAA,WAAW,EAAC,8BADd;AAEE,QAAA,KAAK,EAAEX,IAFT;AAGE,QAAA,QAAQ,EAAEC;AAHZ,QAHF,EASE,KAAC,YAAD;AAAc,QAAA,IAAI,EAAC,SAAnB;AAA6B,QAAA,OAAO,EAAEE;AAAtC,QATF,EAWE,KAAC,YAAD;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,OAAO,EAAEG,aAFX;AAGE,QAAA,IAAI,EAAC;AAHP,QAXF,EAiBE,KAAC,YAAD;AACE,QAAA,IAAI,EAAC,iBADP;AAEE,QAAA,OAAO,EAAED,aAFX;AAGE,QAAA,IAAI,EAAC;AAHP,QAjBF;AAAA;AADF,IADF;AA2BD,CAzCD;;AA2CA,IAAMI,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,IAAI,EAAE;AACJI,IAAAA,UAAU,EAAE,QADR;AAEJC,IAAAA,OAAO,EAAE;AAFL,GADyB;AAK/BJ,EAAAA,KAAK,EAAE;AACLK,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE,MAFP;AAGLC,IAAAA,KAAK,EAAE,SAHF;AAILC,IAAAA,MAAM,EAAE;AAJH,GALwB;AAW/BC,EAAAA,IAAI,EAAE;AACJF,IAAAA,KAAK,EAAE,MADH;AAEJG,IAAAA,cAAc,EAAE;AAFZ,GAXyB;AAe/BC,EAAAA,IAAI,EAAE;AACJJ,IAAAA,KAAK,EAAE;AADH;AAfyB,CAAlB,CAAf;AAoBA,eAAenB,kBAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {View, Text, StyleSheet, ScrollView} from 'react-native';\r\nimport CustomInput from '../../components/CustomInput';\r\nimport CustomButton from '../../components/CustomButton';\r\nimport {useNavigation} from '@react-navigation/core';\r\n\r\nconst ConfirmEmailScreen = () => {\r\n  const [code, setCode] = useState('');\r\n  const navigation = useNavigation();\r\n\r\n  const onConfirmPressed = () => {\r\n    navigation.navigate('Home');\r\n  };\r\n  const onSignInPress = () => {\r\n    navigation.navigate('SignIn');\r\n  };\r\n  const onResendPress = () => {\r\n    console.warn('onResendPress');\r\n  };\r\n\r\n  return (\r\n    <ScrollView showsVerticalScrollIndicator={false}>\r\n      <View style={styles.root}>\r\n        <Text style={styles.title}>Confirm your email</Text>\r\n\r\n        <CustomInput\r\n          placeholder=\"Enter your confirmation code\"\r\n          value={code}\r\n          setValue={setCode}\r\n        />\r\n\r\n        <CustomButton text=\"Confirm\" onPress={onConfirmPressed} />\r\n\r\n        <CustomButton\r\n          text=\"Resend code\"\r\n          onPress={onResendPress}\r\n          type=\"SECONDARY\"\r\n        />\r\n\r\n        <CustomButton\r\n          text=\"Back to Sign in\"\r\n          onPress={onSignInPress}\r\n          type=\"TERTIARY\"\r\n        />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    alignItems: 'center',\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#051C60',\r\n    margin: 10,\r\n  },\r\n  text: {\r\n    color: 'gray',\r\n    marginVertical: 10,\r\n  },\r\n  link: {\r\n    color: '#FDB075',\r\n  },\r\n});\r\n\r\nexport default ConfirmEmailScreen;\r\n"]},"metadata":{},"sourceType":"module"}