{"ast":null,"code":"\"use strict\";\n\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Card } from 'react-native-elements';\nimport { Ionicons } from '@expo/vector-icons';\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Upload = function Upload(_ref) {\n  var _route$params;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  if ((_route$params = route.params) != null && _route$params.photo) {\n    var _route$params2 = route.params,\n        photo = _route$params2.photo,\n        location = _route$params2.location;\n\n    var _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        modalOpen = _useState2[0],\n        setModalOpen = _useState2[1];\n\n    var _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        pickedUp = _useState4[0],\n        setPickedUp = _useState4[1];\n\n    var _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        text = _React$useState2[0],\n        onChangeText = _React$useState2[1];\n\n    console.log('start ' + pickedUp);\n\n    var toggleSwitch = function toggleSwitch() {\n      console.log('davor ' + pickedUp);\n      setPickedUp(function (previousState) {\n        return !previousState;\n      });\n      console.log('danach ' + pickedUp);\n    };\n\n    var reportLitter = function reportLitter() {\n      var coords, data, requestConfig, response, responseJson;\n      return _regeneratorRuntime.async(function reportLitter$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              coords = location.coords;\n              data = new FormData();\n              data.append('files', {\n                uri: photo.uri,\n                name: \"test.jpg\",\n                type: 'multipart/form-data'\n              });\n              requestConfig = {\n                method: 'POST',\n                body: data\n              };\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(fetch(\"http://178.18.252.126:1337/upload\", requestConfig));\n\n            case 6:\n              response = _context.sent;\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 9:\n              responseJson = _context.sent;\n              axios.post(\"http://178.18.252.126:1337/litters\", {\n                coordinates: coords.latitude + \",\" + coords.longitude,\n                type: text,\n                pictureOfLitter: responseJson[0].id,\n                pickedUp: pickedUp\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _jsxs(SafeAreaView, {\n      style: styles.container,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setModalOpen(true);\n        },\n        children: _jsx(Image, {\n          style: styles.photo,\n          source: {\n            uri: photo.uri\n          }\n        })\n      }), _jsx(Modal, {\n        visible: modalOpen,\n        animationType: \"slide\",\n        onRequestClose: function onRequestClose() {\n          return setModalOpen(false);\n        },\n        children: _jsxs(View, {\n          style: styles.modalContainer,\n          children: [_jsx(Ionicons, {\n            name: \"close\",\n            size: 25,\n            style: styles.modalClose,\n            onPress: function onPress() {\n              return setModalOpen(false);\n            }\n          }), _jsx(View, {\n            style: styles.card,\n            children: _jsx(Card, {\n              children: _jsx(Card.Title, {\n                children: _jsx(Text, {\n                  children: pickedUp ? \"Picked up\" : \"Not picked up\"\n                })\n              })\n            })\n          }), _jsx(Image, {\n            style: styles.modalPhoto,\n            source: {\n              uri: photo.uri\n            }\n          }), _jsx(Switch, {\n            style: styles.switch,\n            trackColor: {\n              false: \"#ff0000\",\n              true: \"#00ff00\"\n            },\n            thumbColor: pickedUp ? \"#006400\" : \"#800000\",\n            ios_backgroundColor: \"#ff0000\",\n            onValueChange: toggleSwitch,\n            value: pickedUp\n          }), _jsx(TextInput, {\n            style: styles.input,\n            onChangeText: onChangeText,\n            value: text,\n            placeholder: \"Fill the type of litter in here\",\n            keyboardType: \"default\"\n          }), _jsx(TouchableOpacity, {\n            style: styles.sendButton,\n            onPress: function onPress() {\n              reportLitter();\n            },\n            children: _jsx(Ionicons, {\n              color: \"white\",\n              name: \"send-outline\",\n              size: SCREEN_HEIGHT * 0.07\n            })\n          })]\n        })\n      })]\n    });\n  } else {\n    return _jsx(View, {\n      children: _jsx(Text, {\n        children: \"First take a photo\"\n      })\n    });\n  }\n};\n\nvar SCREEN_HEIGHT = Dimensions.get('window').height;\nvar styles = StyleSheet.create({\n  card: {\n    position: 'absolute',\n    top: 120\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#38c172'\n  },\n  input: {\n    position: 'absolute',\n    height: 40,\n    width: 200,\n    margin: 20,\n    borderWidth: 1,\n    padding: 10,\n    top: 30\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#38c172'\n  },\n  modalClose: {\n    position: 'absolute',\n    right: 10,\n    top: 30\n  },\n  modalPhoto: {\n    width: 200,\n    height: 200,\n    borderRadius: 10\n  },\n  photo: {\n    borderRadius: 10,\n    width: 200,\n    height: 200\n  },\n  sendButton: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    bottom: 5,\n    right: 10,\n    zIndex: 1\n  },\n  switch: {\n    position: 'absolute',\n    bottom: 100,\n    margin: 20\n  }\n});\nexport default Upload;","map":{"version":3,"sources":["C:/Users/DCV/Documents/ReactNativeProjekt/EarthCrew/src/screens/menu/Upload.js"],"names":["React","useEffect","useState","Card","Ionicons","axios","Upload","navigation","route","params","photo","location","modalOpen","setModalOpen","pickedUp","setPickedUp","text","onChangeText","console","log","toggleSwitch","previousState","reportLitter","coords","data","FormData","append","uri","name","type","requestConfig","method","body","fetch","response","json","responseJson","post","coordinates","latitude","longitude","pictureOfLitter","id","styles","container","modalContainer","modalClose","card","modalPhoto","switch","false","true","input","sendButton","SCREEN_HEIGHT","Dimensions","get","height","StyleSheet","create","position","top","flex","justifyContent","alignItems","backgroundColor","width","margin","borderWidth","padding","right","borderRadius","bottom","zIndex"],"mappings":"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","sourcesContent":["\"use strict\"\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, View, Image, Text, TouchableOpacity, TextInput, SafeAreaView, Switch, Dimensions, Alert, Modal, Button } from 'react-native';\r\nimport { Card } from 'react-native-elements';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport axios from 'axios';\r\n\r\nconst Upload = ({ navigation, route }) => {\r\n\r\n    // When photo is present\r\n    if (route.params?.photo) {\r\n        const { photo, location } = route.params;\r\n        const [modalOpen, setModalOpen] = useState(false)\r\n        const [pickedUp, setPickedUp] = useState(false)\r\n        const [text, onChangeText] = React.useState(null);\r\n        console.log('start ' + pickedUp)\r\n\r\n        const toggleSwitch = () => {\r\n            console.log('davor ' + pickedUp)\r\n            setPickedUp(previousState => !previousState);\r\n            console.log('danach ' + pickedUp)\r\n        }\r\n\r\n        // Report litter\r\n        const reportLitter = async () => {\r\n            const coords = location.coords;\r\n\r\n            //Multipart request\r\n            const data = new FormData();\r\n\r\n            data.append('files', {\r\n                uri: photo.uri,\r\n                name: \"test.jpg\",\r\n                type: 'multipart/form-data'\r\n            });\r\n\r\n            const requestConfig = {\r\n                method: 'POST',\r\n                body: data,\r\n            };\r\n\r\n            const response = await fetch(\"http://178.18.252.126:1337/upload\", requestConfig);\r\n\r\n            let responseJson = await response.json();\r\n\r\n            axios.post(\"http://178.18.252.126:1337/litters\", {\r\n                coordinates: coords.latitude + \",\" + coords.longitude,\r\n                type: text,\r\n                pictureOfLitter: responseJson[0].id,\r\n                pickedUp: pickedUp\r\n            })\r\n        }\r\n\r\n        // onRequestClose for Android User\r\n        return (\r\n            <SafeAreaView style={styles.container}>\r\n                <TouchableOpacity onPress={() => setModalOpen(true)}>\r\n                    <Image style={styles.photo} source={{ uri: photo.uri }} />\r\n                </TouchableOpacity>\r\n\r\n                <Modal visible={modalOpen} animationType='slide' onRequestClose={() => setModalOpen(false)}>\r\n\r\n                    <View style={styles.modalContainer}>\r\n                        <Ionicons\r\n                            name='close'\r\n                            size={25}\r\n                            style={styles.modalClose}\r\n                            onPress={() => setModalOpen(false)} />\r\n\r\n                        <View style={styles.card}>\r\n                            <Card >\r\n                                <Card.Title  >\r\n                                    <Text>\r\n                                        {pickedUp ? \"Picked up\" : \"Not picked up\"}\r\n                                    </Text>\r\n                                </Card.Title>\r\n                            </Card>\r\n                        </View>\r\n\r\n                        <Image style={styles.modalPhoto} source={{ uri: photo.uri }} />\r\n\r\n                        <Switch\r\n                            style={styles.switch}\r\n                            trackColor={{ false: \"#ff0000\", true: \"#00ff00\" }}\r\n                            thumbColor={pickedUp ? \"#006400\" : \"#800000\"}\r\n                            ios_backgroundColor=\"#ff0000\"\r\n                            onValueChange={toggleSwitch}\r\n                            value={pickedUp}\r\n                        />\r\n                        <TextInput\r\n                            style={styles.input}\r\n                            onChangeText={onChangeText}\r\n                            value={text}\r\n                            placeholder=\"Fill the type of litter in here\"\r\n                            keyboardType='default'\r\n                        />\r\n                        <TouchableOpacity\r\n                            style={styles.sendButton}\r\n                            onPress={() => {\r\n                                reportLitter()\r\n                            }}>\r\n                            <Ionicons\r\n                                color=\"white\"\r\n                                name=\"send-outline\"\r\n                                size={SCREEN_HEIGHT * 0.07} />\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </Modal>\r\n            </SafeAreaView >\r\n        );\r\n    } else {\r\n        return <View>\r\n            <Text>First take a photo</Text>\r\n        </View>\r\n    }\r\n}\r\n\r\nconst SCREEN_HEIGHT = Dimensions.get('window').height;\r\n\r\nconst styles = StyleSheet.create({\r\n    card: {\r\n        position: 'absolute',\r\n        top: 120\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#38c172',\r\n    },\r\n    input: {\r\n        position: 'absolute',\r\n        height: 40,\r\n        width: 200,\r\n        margin: 20,\r\n        borderWidth: 1,\r\n        padding: 10,\r\n        top: 30\r\n    },\r\n    modalContainer: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#38c172',\r\n    },\r\n    modalClose: {\r\n        position: 'absolute',\r\n        right: 10,\r\n        top: 30\r\n    },\r\n    modalPhoto: {\r\n        width: 200,\r\n        height: 200,\r\n        borderRadius: 10,\r\n    },\r\n    photo: {\r\n        borderRadius: 10,\r\n        width: 200,\r\n        height: 200\r\n    },\r\n    sendButton: {\r\n        backgroundColor: 'transparent',\r\n        position: 'absolute',\r\n        bottom: 5,\r\n        right: 10,\r\n        zIndex: 1\r\n    },\r\n    switch: {\r\n        position: 'absolute',\r\n        bottom: 100,\r\n        margin: 20\r\n    }\r\n})\r\n\r\nexport default Upload;"]},"metadata":{},"sourceType":"module"}