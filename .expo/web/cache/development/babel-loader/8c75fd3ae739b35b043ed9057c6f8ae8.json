{"ast":null,"code":"\"use strict\";\n\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { Component } from 'react';\nimport MapView, { Callout, Circle, Marker } from 'react-native-maps';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MapScreen() {\n  var _React$useState = React.useState({\n    latitude: 37.78825,\n    longitude: -122.4324\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      pin = _React$useState2[0],\n      setPin = _React$useState2[1];\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(MapView, {\n      style: styles.map,\n      initialRegion: {\n        latitude: 37.78825,\n        longitude: -122.4324,\n        latitudeDelta: 0.0922,\n        longitudeDelta: 0.0421\n      },\n      children: [_jsx(Marker, {\n        coordinate: pin,\n        draggable: true,\n        onDragStart: function onDragStart(event) {\n          console.log(\"Drag start\", event.nativeEvent.coordinate);\n        },\n        onDragEnd: function onDragEnd(event) {\n          setPin({\n            latitude: event.nativeEvent.coordinate.latitude,\n            longitude: event.nativeEvent.coordinate.longitude\n          });\n        },\n        children: _jsx(Callout, {\n          children: _jsx(Text, {\n            children: \" You are here\"\n          })\n        })\n      }), _jsx(Circle, {\n        center: {\n          latitude: 37.78825,\n          longitude: -122.4324\n        },\n        radius: 1000\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  map: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height\n  }\n});","map":{"version":3,"sources":["C:/Users/DCV/Documents/ReactNativeProjekt/EarthCrew/js/screens/MapScreen.js"],"names":["React","Component","MapView","Callout","Circle","Marker","MapScreen","useState","latitude","longitude","pin","setPin","styles","container","map","latitudeDelta","longitudeDelta","event","console","log","nativeEvent","coordinate","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","Dimensions","get","height"],"mappings":"AAAA;;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,IAAkBC,OAAlB,EAA2BC,MAA3B,EAAmCC,MAAnC,QAAiD,mBAAjD;;;;;;;AAIA,eAAe,SAASC,SAAT,GAAqB;AAEhC,wBAAsBN,KAAK,CAACO,QAAN,CAAe;AACjCC,IAAAA,QAAQ,EAAE,QADuB;AAEjCC,IAAAA,SAAS,EAAE,CAAC;AAFqB,GAAf,CAAtB;AAAA;AAAA,MAAOC,GAAP;AAAA,MAAYC,MAAZ;;AAKA,SACI,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,cACI,MAAC,OAAD;AACI,MAAA,KAAK,EAAED,MAAM,CAACE,GADlB;AAEI,MAAA,aAAa,EAAE;AACXN,QAAAA,QAAQ,EAAE,QADC;AAEXC,QAAAA,SAAS,EAAE,CAAC,QAFD;AAGXM,QAAAA,aAAa,EAAE,MAHJ;AAIXC,QAAAA,cAAc,EAAE;AAJL,OAFnB;AAAA,iBAQI,KAAC,MAAD;AACI,QAAA,UAAU,EAAEN,GADhB;AAEI,QAAA,SAAS,EAAE,IAFf;AAGI,QAAA,WAAW,EAAE,qBAACO,KAAD,EAAW;AACpBC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAAK,CAACG,WAAN,CAAkBC,UAA5C;AACH,SALL;AAMI,QAAA,SAAS,EAAE,mBAACJ,KAAD,EAAW;AAClBN,UAAAA,MAAM,CAAC;AACHH,YAAAA,QAAQ,EAAES,KAAK,CAACG,WAAN,CAAkBC,UAAlB,CAA6Bb,QADpC;AAEHC,YAAAA,SAAS,EAAEQ,KAAK,CAACG,WAAN,CAAkBC,UAAlB,CAA6BZ;AAFrC,WAAD,CAAN;AAIH,SAXL;AAAA,kBAYI,KAAC,OAAD;AAAA,oBACI,KAAC,IAAD;AAAA;AAAA;AADJ;AAZJ,QARJ,EAwBI,KAAC,MAAD;AACI,QAAA,MAAM,EAAE;AACJD,UAAAA,QAAQ,EAAE,QADN;AAEJC,UAAAA,SAAS,EAAE,CAAC;AAFR,SADZ;AAKI,QAAA,MAAM,EAAE;AALZ,QAxBJ;AAAA;AADJ,IADJ;AAoCH;AACD,IAAMG,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC7BV,EAAAA,SAAS,EAAE;AACPW,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE,MAFV;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT,GADkB;AAO7Bb,EAAAA,GAAG,EAAE;AACDc,IAAAA,KAAK,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAD/B;AAEDG,IAAAA,MAAM,EAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC;AAFhC;AAPwB,CAAlB,CAAf","sourcesContent":["\"use strict\"\r\n\r\nimport React, { Component } from 'react';\r\nimport MapView, { Callout, Circle, Marker } from 'react-native-maps';\r\nimport { StyleSheet, Text, View, Dimensions } from 'react-native';\r\n\r\n\r\nexport default function MapScreen() {\r\n\r\n    const [pin, setPin] = React.useState({\r\n        latitude: 37.78825,\r\n        longitude: -122.4324\r\n    })\r\n\r\n    return (\r\n        <View style={styles.container} >\r\n            <MapView\r\n                style={styles.map}\r\n                initialRegion={{\r\n                    latitude: 37.78825,\r\n                    longitude: -122.4324,\r\n                    latitudeDelta: 0.0922,\r\n                    longitudeDelta: 0.0421,\r\n                }}>\r\n                <Marker\r\n                    coordinate={pin}\r\n                    draggable={true}\r\n                    onDragStart={(event) => {\r\n                        console.log(\"Drag start\", event.nativeEvent.coordinate)\r\n                    }}\r\n                    onDragEnd={(event) => {\r\n                        setPin({\r\n                            latitude: event.nativeEvent.coordinate.latitude,\r\n                            longitude: event.nativeEvent.coordinate.longitude\r\n                        })\r\n                    }}>\r\n                    <Callout>\r\n                        <Text> You are here</Text>\r\n                    </Callout>\r\n                </Marker>\r\n                <Circle\r\n                    center={{\r\n                        latitude: 37.78825,\r\n                        longitude: -122.4324,\r\n                    }}\r\n                    radius={1000} />\r\n            </MapView>\r\n        </View >\r\n    );\r\n\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    map: {\r\n        width: Dimensions.get('window').width,\r\n        height: Dimensions.get('window').height,\r\n    },\r\n});"]},"metadata":{},"sourceType":"module"}