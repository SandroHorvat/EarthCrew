{"ast":null,"code":"\"use strict\";\n\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Card } from 'react-native-elements';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Upload = function Upload(_ref) {\n  var _route$params;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  if ((_route$params = route.params) != null && _route$params.photo) {\n    var photo = route.params.photo;\n\n    var _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        modalOpen = _useState2[0],\n        setModalOpen = _useState2[1];\n\n    var _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        litterPickedUp = _useState4[0],\n        setLitterPickdUp = _useState4[1];\n\n    return _jsxs(SafeAreaView, {\n      style: styles.container,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setModalOpen(true);\n        },\n        children: _jsx(Image, {\n          style: styles.photo,\n          source: {\n            uri: photo.uri\n          }\n        })\n      }), _jsx(Modal, {\n        visible: modalOpen,\n        animationType: \"slide\",\n        onRequestClose: function onRequestClose() {\n          return setModalOpen(false);\n        },\n        children: _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(Button, {\n            title: \"Close Modal\",\n            onPress: function onPress() {\n              return setModalOpen(false);\n            }\n          }), _jsx(Image, {\n            style: styles.photo,\n            source: {\n              uri: photo.uri\n            }\n          }), _jsxs(Card, {\n            children: [_jsx(Card.Title, {\n              children: \"Litter\"\n            }), _jsx(Card.Divider, {})]\n          })]\n        })\n      })]\n    });\n  } else {\n    return _jsx(View, {\n      children: _jsx(Text, {\n        children: \"First take a photo\"\n      })\n    });\n  }\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#38c172',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  photo: {\n    width: 200,\n    height: 220\n  },\n  modalPhoto: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height,\n    backgroundColor: '#38c172'\n  }\n});\nexport default Upload;","map":{"version":3,"sources":["C:/Users/DCV/Documents/ReactNativeProjekt/EarthCrew/src/screens/menu/Upload.js"],"names":["React","useEffect","useState","Card","Upload","navigation","route","params","photo","modalOpen","setModalOpen","litterPickedUp","setLitterPickdUp","styles","container","uri","StyleSheet","create","flex","backgroundColor","justifyContent","alignItems","width","height","modalPhoto","Dimensions","get"],"mappings":"AAAA;;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;;;;;AAEA,SAASC,IAAT,QAAqB,uBAArB;;;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAA2B;AAAA;;AAAA,MAAxBC,UAAwB,QAAxBA,UAAwB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAEtC,uBAAIA,KAAK,CAACC,MAAV,aAAI,cAAcC,KAAlB,EAAyB;AACrB,QAAQA,KAAR,GAAkBF,KAAK,CAACC,MAAxB,CAAQC,KAAR;;AACA,oBAAkCN,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,QAAOO,SAAP;AAAA,QAAkBC,YAAlB;;AACA,qBAA2CR,QAAQ,CAAC,KAAD,CAAnD;AAAA;AAAA,QAAOS,cAAP;AAAA,QAAuBC,gBAAvB;;AAEA,WACI,MAAC,YAAD;AAAc,MAAA,KAAK,EAAEC,MAAM,CAACC,SAA5B;AAAA,iBAEI,KAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE;AAAA,iBAAMJ,YAAY,CAAC,IAAD,CAAlB;AAAA,SAA3B;AAAA,kBACI,KAAC,KAAD;AACI,UAAA,KAAK,EAAEG,MAAM,CAACL,KADlB;AAEI,UAAA,MAAM,EAAE;AAAEO,YAAAA,GAAG,EAAEP,KAAK,CAACO;AAAb;AAFZ;AADJ,QAFJ,EAQI,KAAC,KAAD;AACI,QAAA,OAAO,EAAEN,SADb;AAEI,QAAA,aAAa,EAAC,OAFlB;AAII,QAAA,cAAc,EAAE;AAAA,iBAAMC,YAAY,CAAC,KAAD,CAAlB;AAAA,SAJpB;AAAA,kBAMI,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA,qBACI,KAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,aAAd;AAA4B,YAAA,OAAO,EAAE;AAAA,qBAAMJ,YAAY,CAAC,KAAD,CAAlB;AAAA;AAArC,YADJ,EAEI,KAAC,KAAD;AAAO,YAAA,KAAK,EAAEG,MAAM,CAACL,KAArB;AAA4B,YAAA,MAAM,EAAE;AAAEO,cAAAA,GAAG,EAAEP,KAAK,CAACO;AAAb;AAApC,YAFJ,EAII,MAAC,IAAD;AAAA,uBACI,KAAC,IAAD,CAAM,KAAN;AAAA;AAAA,cADJ,EAEI,KAAC,IAAD,CAAM,OAAN,KAFJ;AAAA,YAJJ;AAAA;AANJ,QARJ;AAAA,MADJ;AA6BH,GAlCD,MAkCO;AACH,WAAO,KAAC,IAAD;AAAA,gBACH,KAAC,IAAD;AAAA;AAAA;AADG,MAAP;AAEH;AACJ,CAxCD;;AA0CA,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC7BH,EAAAA,SAAS,EAAE;AACPI,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE,SAFV;AAGPC,IAAAA,cAAc,EAAE,QAHT;AAIPC,IAAAA,UAAU,EAAE;AAJL,GADkB;AAO7Bb,EAAAA,KAAK,EAAE;AACHc,IAAAA,KAAK,EAAE,GADJ;AAEHC,IAAAA,MAAM,EAAE;AAFL,GAPsB;AAW7BC,EAAAA,UAAU,EAAE;AACRF,IAAAA,KAAK,EAAEG,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBJ,KADxB;AAERC,IAAAA,MAAM,EAAEE,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBH,MAFzB;AAGRJ,IAAAA,eAAe,EAAE;AAHT;AAXiB,CAAlB,CAAf;AAmBA,eAAef,MAAf","sourcesContent":["\"use strict\"\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, View, Image, Text, TouchableOpacity, SafeAreaView, FlatList, Dimensions, Alert, Modal, Button } from 'react-native';\r\nimport { Card } from 'react-native-elements';\r\n\r\nconst Upload = ({ navigation, route }) => {\r\n\r\n    if (route.params?.photo) {\r\n        const { photo } = route.params;\r\n        const [modalOpen, setModalOpen] = useState(false)\r\n        const [litterPickedUp, setLitterPickdUp] = useState(false)\r\n\r\n        return (\r\n            <SafeAreaView style={styles.container}>\r\n\r\n                <TouchableOpacity onPress={() => setModalOpen(true)}>\r\n                    <Image\r\n                        style={styles.photo}\r\n                        source={{ uri: photo.uri }} />\r\n                </TouchableOpacity>\r\n\r\n                <Modal\r\n                    visible={modalOpen}\r\n                    animationType='slide'\r\n                    // for Android User\r\n                    onRequestClose={() => setModalOpen(false)}>\r\n                        \r\n                    <View style={styles.container}>\r\n                        <Button title='Close Modal' onPress={() => setModalOpen(false)} />\r\n                        <Image style={styles.photo} source={{ uri: photo.uri }} />\r\n\r\n                        <Card>\r\n                            <Card.Title>Litter</Card.Title>\r\n                            <Card.Divider />\r\n                        </Card>\r\n\r\n                    </View>\r\n                </Modal>\r\n\r\n            </SafeAreaView>\r\n        );\r\n    } else {\r\n        return <View>\r\n            <Text>First take a photo</Text></View>\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#38c172',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    photo: {\r\n        width: 200,\r\n        height: 220\r\n    },\r\n    modalPhoto: {\r\n        width: Dimensions.get('window').width,\r\n        height: Dimensions.get('window').height,\r\n        backgroundColor: '#38c172'\r\n\r\n    }\r\n})\r\n\r\nexport default Upload;"]},"metadata":{},"sourceType":"module"}