{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar defaultState = {\n  jwt: null,\n  user: null\n};\n\nvar UserReducer = function UserReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'USER_SAVE':\n      {\n        return _objectSpread(_objectSpread({}, state), {\n          jwt: action.payload.jwt,\n          user: action.payload.user\n        });\n      }\n\n    case 'USER_DELETE':\n      {\n        return defaultState;\n      }\n\n    default:\n      return defaultState;\n  }\n};\n\nexport default UserReducer;","map":{"version":3,"sources":["C:/Users/DCV/Documents/ReactNativeProjekt/EarthCrew/src/redux/reducers/UserReducer.js"],"names":["defaultState","jwt","user","UserReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,GAAG,EAAE,IADY;AAEjBC,EAAAA,IAAI,EAAE;AAFW,CAArB;;AAiBA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AAAkB;AACd,+CACOF,KADP,GAEO;AAAEH,UAAAA,GAAG,EAAEI,MAAM,CAACE,OAAP,CAAeN,GAAtB;AAA2BC,UAAAA,IAAI,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAAhD,SAFP;AAIH;;AAED,SAAK,aAAL;AAAoB;AAChB,eAAOF,YAAP;AACH;;AAED;AACI,aAAOA,YAAP;AAbR;AAeH,CAhBD;;AAkBA,eAAeG,WAAf","sourcesContent":["const defaultState = {\r\n    jwt: null,\r\n    user: null,\r\n};\r\n\r\n/**\r\n * This is a reducer, a pure function with (state, action) => state signature.\r\n * It describes how an action transforms the state into the next state.\r\n *\r\n * The shape of the state is up to you: it can be a primitive, an array, an object,\r\n * or even an Immutable.js data structure. The only important part is that you should\r\n * not mutate the state object, but return a new object if the state changes.\r\n *\r\n * In this example, we use a `switch` statement and strings, but you can use a helper that\r\n * follows a different convention (such as function maps) if it makes sense for your\r\n * project.\r\n */\r\nconst UserReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case 'USER_SAVE': {\r\n            return {\r\n                ...state,\r\n                ...{ jwt: action.payload.jwt, user: action.payload.user },\r\n            };\r\n        }\r\n\r\n        case 'USER_DELETE': {\r\n            return defaultState;\r\n        }\r\n\r\n        default:\r\n            return defaultState;\r\n    }\r\n};\r\n\r\nexport default UserReducer;"]},"metadata":{},"sourceType":"module"}