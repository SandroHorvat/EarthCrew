{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useState } from 'react';\nimport UserModel from \"../../../app/models/UserModel\";\nimport { Headline, Paragraph, TextInput, Button, Snackbar, Portal } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/core';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Login = function Login() {\n  var _React$useState = React.useState(\"test@gmail.com\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      identifier = _React$useState2[0],\n      setIdentifier = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"123123\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      password = _React$useState4[0],\n      setPassword = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      visible = _React$useState6[0],\n      setVisible = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      loading = _React$useState8[0],\n      setLoading = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      error = _React$useState10[0],\n      setError = _React$useState10[1];\n\n  var navigation = useNavigation();\n\n  var validateInput = function validateInput() {\n    var errors = false;\n\n    if (!identifier || identifier.length === 0) {\n      errors = true;\n    }\n\n    if (!password || password.length === 0) {\n      errors = true;\n    }\n\n    return !errors;\n  };\n\n  var authenticateUser = function authenticateUser() {\n    var user;\n    return _regeneratorRuntime.async(function authenticateUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!validateInput()) {\n              _context.next = 18;\n              break;\n            }\n\n            setLoading(true);\n            user = new UserModel(identifier, password);\n            _context.prev = 3;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(user.login());\n\n          case 6:\n            if (!_context.sent) {\n              _context.next = 9;\n              break;\n            }\n\n            navigation.navigate(\"App\", {\n              screen: 'Camera'\n            });\n            setLoading(false);\n\n          case 9:\n            _context.next = 16;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](3);\n            setError(_context.t0.message);\n            setVisible(true);\n            setLoading(false);\n\n          case 16:\n            _context.next = 21;\n            break;\n\n          case 18:\n            setError('Please fill out all *required fields');\n            setVisible(true);\n            setLoading(false);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 11]], Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.base,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Headline, {\n        style: styles.appTitle,\n        children: \"Enter Earthcrew \"\n      }), _jsx(Paragraph, {\n        style: styles.appDesc,\n        children: _jsx(Image, {\n          style: styles.logo,\n          source: require(\"./Logo.jpg\")\n        })\n      })]\n    }), _jsxs(_Fragment, {\n      children: [_jsx(View, {\n        style: styles.divider\n      }), _jsx(TextInput, {\n        value: identifier,\n        onChangeText: function onChangeText(text) {\n          return setIdentifier(text);\n        },\n        label: \"*Username or email\",\n        placeholder: \"*Username or email\"\n      })]\n    }), _jsxs(_Fragment, {\n      children: [_jsx(View, {\n        style: styles.divider\n      }), _jsx(TextInput, {\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        },\n        label: \"*Password\",\n        placeholder: \"*Password\",\n        secureTextEntry: true\n      })]\n    }), _jsxs(_Fragment, {\n      children: [_jsx(View, {\n        style: styles.divider\n      }), _jsx(Button, {\n        loading: loading,\n        disabled: loading,\n        style: styles.btn,\n        onPress: function onPress() {\n          return authenticateUser();\n        },\n        mode: \"contained\",\n        children: \"Login\"\n      }), _jsx(Button, {\n        loading: loading,\n        disabled: loading,\n        style: styles.btn,\n        onPress: function onPress() {\n          return navigation.navigate(\"Register\");\n        },\n        mode: \"contained\",\n        children: \"Register\"\n      }), _jsx(View, {\n        style: styles.divider\n      }), _jsx(View, {\n        style: styles.divider\n      })]\n    }), _jsx(_Fragment, {\n      children: _jsx(Portal, {\n        children: _jsx(Snackbar, {\n          visible: visible,\n          onDismiss: function onDismiss() {\n            return setVisible(false);\n          },\n          children: error\n        })\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  base: {\n    flex: 1,\n    paddingLeft: 16,\n    paddingRight: 16,\n    alignContent: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ffffff'\n  },\n  divider: {\n    height: 16\n  },\n  headline: {\n    fontSize: 30\n  },\n  appDesc: {\n    textAlign: 'center'\n  },\n  header: {\n    justifyContent: 'center',\n    alignSelf: 'center'\n  },\n  appTitle: {\n    textAlign: 'center',\n    fontSize: 30,\n    lineHeight: 35,\n    fontWeight: '700'\n  },\n  btn: {\n    height: 50,\n    paddingTop: 6,\n    margin: 5\n  },\n  logo: {\n    justifyContent: 'center',\n    alignSelf: 'center',\n    width: 210,\n    height: 50\n  }\n});\nexport default Login;","map":{"version":3,"sources":["C:/Users/DCV/Documents/ReactNativeProjekt/EarthCrew/src/screens/auth/login/Login.js"],"names":["React","useState","UserModel","Headline","Paragraph","TextInput","Button","Snackbar","Portal","useNavigation","Login","identifier","setIdentifier","password","setPassword","visible","setVisible","loading","setLoading","error","setError","navigation","validateInput","errors","length","authenticateUser","user","login","navigate","screen","message","styles","base","header","appTitle","appDesc","logo","require","divider","text","btn","StyleSheet","create","flex","paddingLeft","paddingRight","alignContent","justifyContent","backgroundColor","height","headline","fontSize","textAlign","alignSelf","lineHeight","fontWeight","paddingTop","margin","width"],"mappings":"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","sourcesContent":["import { View, StyleSheet, Image } from 'react-native';\r\nimport React, { useState } from 'react';\r\nimport UserModel from '../../../app/models/UserModel';\r\nimport { Headline, Paragraph, TextInput, Button, Snackbar, Portal } from 'react-native-paper';\r\nimport { useNavigation } from '@react-navigation/core';\r\n\r\nconst Login = () => {\r\n    const [identifier, setIdentifier] = React.useState(\"test@gmail.com\");\r\n    const [password, setPassword] = React.useState(\"123123\");\r\n    const [visible, setVisible] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [error, setError] = React.useState(false);\r\n    const navigation = useNavigation();\r\n\r\n    const validateInput = () => {\r\n        let errors = false;\r\n\r\n        if (!identifier || identifier.length === 0) {\r\n            errors = true;\r\n        }\r\n        if (!password || password.length === 0) {\r\n            errors = true;\r\n        }\r\n        return !errors;\r\n    };\r\n\r\n    const authenticateUser = async () => {\r\n        if (validateInput()) {\r\n            setLoading(true);\r\n            const user = new UserModel(identifier, password);\r\n\r\n            try {\r\n                if (await user.login()) {\r\n                    navigation.navigate(\"App\", { screen: 'Camera' })\r\n                    setLoading(false);\r\n                }\r\n            } catch (err) {\r\n                setError(err.message);\r\n                setVisible(true);\r\n                setLoading(false);\r\n            }\r\n        } else {\r\n            setError('Please fill out all *required fields');\r\n            setVisible(true);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={styles.base}>\r\n            <View style={styles.header}>\r\n                <Headline style={styles.appTitle}>Enter Earthcrew </Headline>\r\n                <Paragraph style={styles.appDesc}>\r\n                    <Image\r\n                        style={styles.logo}\r\n                        source={require('./Logo.jpg')}\r\n                    />\r\n                </Paragraph>\r\n            </View>\r\n\r\n            <>\r\n                <View style={styles.divider} />\r\n                <TextInput\r\n                    value={identifier}\r\n                    onChangeText={text => setIdentifier(text)}\r\n                    label=\"*Username or email\"\r\n                    placeholder=\"*Username or email\">\r\n                </TextInput>\r\n            </>\r\n            <>\r\n                <View style={styles.divider} />\r\n                <TextInput\r\n                    value={password}\r\n                    onChangeText={text => setPassword(text)}\r\n                    label=\"*Password\"\r\n                    placeholder=\"*Password\"\r\n                    secureTextEntry>\r\n                </TextInput>\r\n            </>\r\n            <>\r\n                <View style={styles.divider} />\r\n                <Button\r\n                    loading={loading}\r\n                    disabled={loading}\r\n                    style={styles.btn}\r\n                    onPress={() => authenticateUser()}\r\n                    mode=\"contained\">\r\n                    Login\r\n                </Button>\r\n                <Button\r\n                    loading={loading}\r\n                    disabled={loading}\r\n                    style={styles.btn}\r\n                    onPress={() => navigation.navigate(\"Register\")}\r\n                    mode=\"contained\">\r\n                    Register\r\n                </Button>\r\n                <View style={styles.divider} />\r\n                <View style={styles.divider} />\r\n            </>\r\n            <>\r\n                {/**\r\n             * We use a portal component to render\r\n             * the snackbar on top of everything else\r\n             * */}\r\n                <Portal>\r\n                    <Snackbar visible={visible} onDismiss={() => setVisible(false)}>\r\n                        {error}\r\n                    </Snackbar>\r\n                </Portal>\r\n            </>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    base: {\r\n        flex: 1,\r\n        paddingLeft: 16,\r\n        paddingRight: 16,\r\n        alignContent: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#ffffff',\r\n    },\r\n    divider: {\r\n        height: 16,\r\n    },\r\n    headline: {\r\n        fontSize: 30,\r\n    },\r\n    appDesc: {\r\n        textAlign: 'center',\r\n    },\r\n    header: {\r\n        justifyContent: 'center',\r\n        alignSelf: 'center',\r\n    },\r\n    appTitle: {\r\n        textAlign: 'center',\r\n        fontSize: 30,\r\n        lineHeight: 35,\r\n        fontWeight: '700',\r\n    },\r\n    btn: {\r\n        height: 50,\r\n        paddingTop: 6,\r\n        margin: 5\r\n    },\r\n    logo: {\r\n        justifyContent: 'center',\r\n        alignSelf: 'center',\r\n        width: 210,\r\n        height: 50\r\n    }\r\n});\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}